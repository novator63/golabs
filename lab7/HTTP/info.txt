HTTP SERVER

ServeMux (сокращённо от “Serve Multiplexer”) — это встроенный маршрутизатор (router) в стандартной библиотеке Go.
Он отвечает за то, чтобы:
    принять входящий HTTP-запрос (например, GET /hello);
    определить, какой обработчик (handler) должен его обслужить;
    вызвать соответствующую функцию.

Middleware — это прослойка, которая “оборачивает” обработчики.
Например, логирование:
http.ListenAndServe(":8080", logMiddleware(mux))

    Ты берёшь свой mux и оборачиваешь его функцией, которая:
    выполняет код до вызова основного обработчика (например, записывает в лог);
    вызывает сам обработчик (next.ServeHTTP);
    потом выполняет код после (например, считает время выполнения).

mux.HandleFunc("/data", func(w http.ResponseWriter, r *http.Request)
Представь, что у тебя есть почтовый ящик (сервер):
    pattern — это адрес отделения почты (например, “/hello”),
    r *Request — это конверт от клиента (в нём всё: отправитель, письмо, вложение),
    w ResponseWriter — это чистый лист бумаги, на котором ты пишешь ответ.
    Когда приходит письмо (HTTP-запрос), Go передаёт тебе конверт (r) и лист для ответа (w).
    Ты читаешь конверт, пишешь ответ — и отправляешь обратно клиенту.